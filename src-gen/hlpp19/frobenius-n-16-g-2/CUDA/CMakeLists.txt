cmake_minimum_required(VERSION 3.10)
project(frobenius-n-16-g-2 VERSION 1.0.0 LANGUAGES CXX CUDA)

SET(CMAKE_CXX_FLAGS_DEV "-O0 -g -march=native -Wall -Wextra -DMPICH_IGNORE_CXX_SEEK -std=c++14")
SET(CMAKE_CXX_FLAGS_TEST "-O3 -g -march=native -fopt-info-vec-optimized -Wall -Wextra -DMPICH_IGNORE_CXX_SEEK -std=c++14 " )
SET(CMAKE_CXX_FLAGS_NVPROF "-O3 -g -DNDEBUG -march=native -DMPICH_IGNORE_CXX_SEEK -std=c++14")
SET(CMAKE_CXX_FLAGS_BENCHMARK "-O3 -DNDEBUG -march=native -DMPICH_IGNORE_CXX_SEEK -std=c++14")
SET(CMAKE_CXX_FLAGS_BENCHMARKPALMA "-O3 -DNDEBUG -march=broadwell -DMPICH_IGNORE_CXX_SEEK -std=c++14")
SET(CMAKE_CXX_FLAGS_BENCHMARKTAURUS "-O3 -DNDEBUG -march=haswell -DMPICH_IGNORE_CXX_SEEK -std=c++14")

set(CMAKE_CUDA_HOST_FLAGS " -Xcompiler ")
set(CMAKE_CUDA_HOST_LINKER_FLAGS " -Xlinker ")

# packages
find_package(MPI REQUIRED)
string(REPLACE " " "," MPI_CXX_LINK_FLAG ${MPI_CXX_LINK_FLAGS})

foreach (flag ${MPI_CXX_COMPILE_OPTIONS})
	string(APPEND CMAKE_CUDA_HOST_FLAGS ",${flag}")
endforeach (flag ${MPI_CXX_COMPILE_OPTIONS})
foreach (flag ${MPI_CXX_LINK_FLAG})
	string(APPEND CMAKE_CUDA_HOST_LINKER_FLAGS ",${flag}")
endforeach (flag ${MPI_CXX_LINK_FLAG})
find_package(OpenMP REQUIRED)
foreach (flag ${OpenMP_CXX_FLAGS})
	string(APPEND CMAKE_CUDA_HOST_FLAGS ",${flag}")
	string(APPEND CMAKE_CUDA_HOST_LINKER_FLAGS ",${flag}")
endforeach (flag ${OpenMP_CXX_FLAGS})

# append host flags to "normal" flags
string(APPEND CMAKE_CUDA_FLAGS ${CMAKE_CUDA_HOST_FLAGS})
string(APPEND CMAKE_CUDA_FLAGS ${CMAKE_CUDA_HOST_LINKER_FLAGS})

SET( CMAKE_CUDA_FLAGS_DEV "-g -G -O0 -arch=compute_61 -code=sm_61 -use_fast_math -restrict -Xptxas -O0 -Xcompiler -O0,-g,-march=native,-Wall,-Wextra,-DMPICH_IGNORE_CXX_SEEK,-std=c++14")
SET( CMAKE_CUDA_FLAGS_TEST "-g -G -O0 -arch=compute_61 -code=sm_61 -use_fast_math -restrict -Xptxas -O0 -Xcompiler -O3,-g,-march=native,-fopt-info-vec-optimized,-Wall,-Wextra,-DMPICH_IGNORE_CXX_SEEK,-std=c++14")
SET( CMAKE_CUDA_FLAGS_NVPROF "-g -G -pg -O3 -arch=compute_35 -code=sm_35 -use_fast_math -w -restrict -Xcompiler -O3,-g,-DNDEBUG,-march=native,-DMPICH_IGNORE_CXX_SEEK,-std=c++14")
SET( CMAKE_CUDA_FLAGS_BENCHMARK "-O3 -arch=compute_35 -code=sm_35 -use_fast_math -w -restrict -Xptxas -O3" )
SET( CMAKE_CUDA_FLAGS_BENCHMARKPALMA "-O3 -arch=compute_35 -code=sm_35 -use_fast_math -w -restrict -Xptxas -O3 -Xcompiler -O3,-DNDEBUG,-march=broadwell,-DMPICH_IGNORE_CXX_SEEK,-std=c++14" )
SET( CMAKE_CUDA_FLAGS_BENCHMARKTAURUS "-O3 -arch=compute_35 -code=sm_35 -use_fast_math -w -restrict -Xptxas -O3 -Xcompiler -O3,-DNDEBUG,-march=haswell,-DMPICH_IGNORE_CXX_SEEK,-std=c++14")	

# output path for binaries and libraries
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/lib")

add_executable(frobenius-n-16-g-2_0 ${PROJECT_SOURCE_DIR}/src/frobenius-n-16-g-2_0.cu)
target_compile_features(frobenius-n-16-g-2_0 PRIVATE cxx_std_14)
target_include_directories(frobenius-n-16-g-2_0 PRIVATE ${PROJECT_SOURCE_DIR}/include ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES} ${MPI_CXX_INCLUDE_DIRS})
target_compile_definitions(frobenius-n-16-g-2_0 PRIVATE ${MPI_CXX_COMPILE_DEFINITIONS})
target_compile_options(frobenius-n-16-g-2_0 PRIVATE )
target_link_libraries(frobenius-n-16-g-2_0 PRIVATE ${MPI_CXX_LIBRARIES} ${OpenMP_CXX_LIBRARIES})
add_executable(frobenius-n-16-g-2_1 ${PROJECT_SOURCE_DIR}/src/frobenius-n-16-g-2_1.cu)
target_compile_features(frobenius-n-16-g-2_1 PRIVATE cxx_std_14)
target_include_directories(frobenius-n-16-g-2_1 PRIVATE ${PROJECT_SOURCE_DIR}/include ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES} ${MPI_CXX_INCLUDE_DIRS})
target_compile_definitions(frobenius-n-16-g-2_1 PRIVATE ${MPI_CXX_COMPILE_DEFINITIONS})
target_compile_options(frobenius-n-16-g-2_1 PRIVATE )
target_link_libraries(frobenius-n-16-g-2_1 PRIVATE ${MPI_CXX_LIBRARIES} ${OpenMP_CXX_LIBRARIES})
add_executable(frobenius-n-16-g-2_2 ${PROJECT_SOURCE_DIR}/src/frobenius-n-16-g-2_2.cu)
target_compile_features(frobenius-n-16-g-2_2 PRIVATE cxx_std_14)
target_include_directories(frobenius-n-16-g-2_2 PRIVATE ${PROJECT_SOURCE_DIR}/include ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES} ${MPI_CXX_INCLUDE_DIRS})
target_compile_definitions(frobenius-n-16-g-2_2 PRIVATE ${MPI_CXX_COMPILE_DEFINITIONS})
target_compile_options(frobenius-n-16-g-2_2 PRIVATE )
target_link_libraries(frobenius-n-16-g-2_2 PRIVATE ${MPI_CXX_LIBRARIES} ${OpenMP_CXX_LIBRARIES})
add_executable(frobenius-n-16-g-2_3 ${PROJECT_SOURCE_DIR}/src/frobenius-n-16-g-2_3.cu)
target_compile_features(frobenius-n-16-g-2_3 PRIVATE cxx_std_14)
target_include_directories(frobenius-n-16-g-2_3 PRIVATE ${PROJECT_SOURCE_DIR}/include ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES} ${MPI_CXX_INCLUDE_DIRS})
target_compile_definitions(frobenius-n-16-g-2_3 PRIVATE ${MPI_CXX_COMPILE_DEFINITIONS})
target_compile_options(frobenius-n-16-g-2_3 PRIVATE )
target_link_libraries(frobenius-n-16-g-2_3 PRIVATE ${MPI_CXX_LIBRARIES} ${OpenMP_CXX_LIBRARIES})
add_executable(frobenius-n-16-g-2_4 ${PROJECT_SOURCE_DIR}/src/frobenius-n-16-g-2_4.cu)
target_compile_features(frobenius-n-16-g-2_4 PRIVATE cxx_std_14)
target_include_directories(frobenius-n-16-g-2_4 PRIVATE ${PROJECT_SOURCE_DIR}/include ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES} ${MPI_CXX_INCLUDE_DIRS})
target_compile_definitions(frobenius-n-16-g-2_4 PRIVATE ${MPI_CXX_COMPILE_DEFINITIONS})
target_compile_options(frobenius-n-16-g-2_4 PRIVATE )
target_link_libraries(frobenius-n-16-g-2_4 PRIVATE ${MPI_CXX_LIBRARIES} ${OpenMP_CXX_LIBRARIES})
add_executable(frobenius-n-16-g-2_5 ${PROJECT_SOURCE_DIR}/src/frobenius-n-16-g-2_5.cu)
target_compile_features(frobenius-n-16-g-2_5 PRIVATE cxx_std_14)
target_include_directories(frobenius-n-16-g-2_5 PRIVATE ${PROJECT_SOURCE_DIR}/include ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES} ${MPI_CXX_INCLUDE_DIRS})
target_compile_definitions(frobenius-n-16-g-2_5 PRIVATE ${MPI_CXX_COMPILE_DEFINITIONS})
target_compile_options(frobenius-n-16-g-2_5 PRIVATE )
target_link_libraries(frobenius-n-16-g-2_5 PRIVATE ${MPI_CXX_LIBRARIES} ${OpenMP_CXX_LIBRARIES})
add_executable(frobenius-n-16-g-2_6 ${PROJECT_SOURCE_DIR}/src/frobenius-n-16-g-2_6.cu)
target_compile_features(frobenius-n-16-g-2_6 PRIVATE cxx_std_14)
target_include_directories(frobenius-n-16-g-2_6 PRIVATE ${PROJECT_SOURCE_DIR}/include ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES} ${MPI_CXX_INCLUDE_DIRS})
target_compile_definitions(frobenius-n-16-g-2_6 PRIVATE ${MPI_CXX_COMPILE_DEFINITIONS})
target_compile_options(frobenius-n-16-g-2_6 PRIVATE )
target_link_libraries(frobenius-n-16-g-2_6 PRIVATE ${MPI_CXX_LIBRARIES} ${OpenMP_CXX_LIBRARIES})
add_executable(frobenius-n-16-g-2_7 ${PROJECT_SOURCE_DIR}/src/frobenius-n-16-g-2_7.cu)
target_compile_features(frobenius-n-16-g-2_7 PRIVATE cxx_std_14)
target_include_directories(frobenius-n-16-g-2_7 PRIVATE ${PROJECT_SOURCE_DIR}/include ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES} ${MPI_CXX_INCLUDE_DIRS})
target_compile_definitions(frobenius-n-16-g-2_7 PRIVATE ${MPI_CXX_COMPILE_DEFINITIONS})
target_compile_options(frobenius-n-16-g-2_7 PRIVATE )
target_link_libraries(frobenius-n-16-g-2_7 PRIVATE ${MPI_CXX_LIBRARIES} ${OpenMP_CXX_LIBRARIES})
add_executable(frobenius-n-16-g-2_8 ${PROJECT_SOURCE_DIR}/src/frobenius-n-16-g-2_8.cu)
target_compile_features(frobenius-n-16-g-2_8 PRIVATE cxx_std_14)
target_include_directories(frobenius-n-16-g-2_8 PRIVATE ${PROJECT_SOURCE_DIR}/include ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES} ${MPI_CXX_INCLUDE_DIRS})
target_compile_definitions(frobenius-n-16-g-2_8 PRIVATE ${MPI_CXX_COMPILE_DEFINITIONS})
target_compile_options(frobenius-n-16-g-2_8 PRIVATE )
target_link_libraries(frobenius-n-16-g-2_8 PRIVATE ${MPI_CXX_LIBRARIES} ${OpenMP_CXX_LIBRARIES})
add_executable(frobenius-n-16-g-2_9 ${PROJECT_SOURCE_DIR}/src/frobenius-n-16-g-2_9.cu)
target_compile_features(frobenius-n-16-g-2_9 PRIVATE cxx_std_14)
target_include_directories(frobenius-n-16-g-2_9 PRIVATE ${PROJECT_SOURCE_DIR}/include ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES} ${MPI_CXX_INCLUDE_DIRS})
target_compile_definitions(frobenius-n-16-g-2_9 PRIVATE ${MPI_CXX_COMPILE_DEFINITIONS})
target_compile_options(frobenius-n-16-g-2_9 PRIVATE )
target_link_libraries(frobenius-n-16-g-2_9 PRIVATE ${MPI_CXX_LIBRARIES} ${OpenMP_CXX_LIBRARIES})
add_executable(frobenius-n-16-g-2_10 ${PROJECT_SOURCE_DIR}/src/frobenius-n-16-g-2_10.cu)
target_compile_features(frobenius-n-16-g-2_10 PRIVATE cxx_std_14)
target_include_directories(frobenius-n-16-g-2_10 PRIVATE ${PROJECT_SOURCE_DIR}/include ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES} ${MPI_CXX_INCLUDE_DIRS})
target_compile_definitions(frobenius-n-16-g-2_10 PRIVATE ${MPI_CXX_COMPILE_DEFINITIONS})
target_compile_options(frobenius-n-16-g-2_10 PRIVATE )
target_link_libraries(frobenius-n-16-g-2_10 PRIVATE ${MPI_CXX_LIBRARIES} ${OpenMP_CXX_LIBRARIES})
add_executable(frobenius-n-16-g-2_11 ${PROJECT_SOURCE_DIR}/src/frobenius-n-16-g-2_11.cu)
target_compile_features(frobenius-n-16-g-2_11 PRIVATE cxx_std_14)
target_include_directories(frobenius-n-16-g-2_11 PRIVATE ${PROJECT_SOURCE_DIR}/include ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES} ${MPI_CXX_INCLUDE_DIRS})
target_compile_definitions(frobenius-n-16-g-2_11 PRIVATE ${MPI_CXX_COMPILE_DEFINITIONS})
target_compile_options(frobenius-n-16-g-2_11 PRIVATE )
target_link_libraries(frobenius-n-16-g-2_11 PRIVATE ${MPI_CXX_LIBRARIES} ${OpenMP_CXX_LIBRARIES})
add_executable(frobenius-n-16-g-2_12 ${PROJECT_SOURCE_DIR}/src/frobenius-n-16-g-2_12.cu)
target_compile_features(frobenius-n-16-g-2_12 PRIVATE cxx_std_14)
target_include_directories(frobenius-n-16-g-2_12 PRIVATE ${PROJECT_SOURCE_DIR}/include ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES} ${MPI_CXX_INCLUDE_DIRS})
target_compile_definitions(frobenius-n-16-g-2_12 PRIVATE ${MPI_CXX_COMPILE_DEFINITIONS})
target_compile_options(frobenius-n-16-g-2_12 PRIVATE )
target_link_libraries(frobenius-n-16-g-2_12 PRIVATE ${MPI_CXX_LIBRARIES} ${OpenMP_CXX_LIBRARIES})
add_executable(frobenius-n-16-g-2_13 ${PROJECT_SOURCE_DIR}/src/frobenius-n-16-g-2_13.cu)
target_compile_features(frobenius-n-16-g-2_13 PRIVATE cxx_std_14)
target_include_directories(frobenius-n-16-g-2_13 PRIVATE ${PROJECT_SOURCE_DIR}/include ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES} ${MPI_CXX_INCLUDE_DIRS})
target_compile_definitions(frobenius-n-16-g-2_13 PRIVATE ${MPI_CXX_COMPILE_DEFINITIONS})
target_compile_options(frobenius-n-16-g-2_13 PRIVATE )
target_link_libraries(frobenius-n-16-g-2_13 PRIVATE ${MPI_CXX_LIBRARIES} ${OpenMP_CXX_LIBRARIES})
add_executable(frobenius-n-16-g-2_14 ${PROJECT_SOURCE_DIR}/src/frobenius-n-16-g-2_14.cu)
target_compile_features(frobenius-n-16-g-2_14 PRIVATE cxx_std_14)
target_include_directories(frobenius-n-16-g-2_14 PRIVATE ${PROJECT_SOURCE_DIR}/include ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES} ${MPI_CXX_INCLUDE_DIRS})
target_compile_definitions(frobenius-n-16-g-2_14 PRIVATE ${MPI_CXX_COMPILE_DEFINITIONS})
target_compile_options(frobenius-n-16-g-2_14 PRIVATE )
target_link_libraries(frobenius-n-16-g-2_14 PRIVATE ${MPI_CXX_LIBRARIES} ${OpenMP_CXX_LIBRARIES})
add_executable(frobenius-n-16-g-2_15 ${PROJECT_SOURCE_DIR}/src/frobenius-n-16-g-2_15.cu)
target_compile_features(frobenius-n-16-g-2_15 PRIVATE cxx_std_14)
target_include_directories(frobenius-n-16-g-2_15 PRIVATE ${PROJECT_SOURCE_DIR}/include ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES} ${MPI_CXX_INCLUDE_DIRS})
target_compile_definitions(frobenius-n-16-g-2_15 PRIVATE ${MPI_CXX_COMPILE_DEFINITIONS})
target_compile_options(frobenius-n-16-g-2_15 PRIVATE )
target_link_libraries(frobenius-n-16-g-2_15 PRIVATE ${MPI_CXX_LIBRARIES} ${OpenMP_CXX_LIBRARIES})
