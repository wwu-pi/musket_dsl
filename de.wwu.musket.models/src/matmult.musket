#config PLATFORM CPU_MPMD GPU
#config PROCESSES 1
#config CORES 4
#config GPUS 1
#config MODE debug

matrix<double,4,4,dist> as = {1.0};
matrix<double,4,4,dist> bs = {0.001};
matrix<double,4,4,dist> cs = {0.0};

double initA(int a, int b, double x){
	x = (double) a * 4 + b;
	return x;
}

double initB(int a, int b, double x){
	x = (double) 16 + a * 4 + b;
	return x;
}

int negate(int a){
	return -a;
}

int identity(int a){
	return a;
}

int minusOne(int a){
	return -1;
}

double dotProduct(int i, int j, double Cij){

	for (int k = 0; k < cs.columnsLocal(); k++) {
		Cij += as[[i,k]] * bs[[k,j]]; // b transposed
	}

	return Cij;
}

main{
	as.mapIndexInPlace(initA());
	bs.mapIndexInPlace(initB());

	as.show();
	bs.show();
	cs.show();
	
	mkt::roi_start();
	
	as.shiftPartitionsHorizontally(negate());
	bs.shiftPartitionsVertically(negate());
	
	for (int i = 0; i < as.blocksInRow(); ++i) {
    	cs.mapLocalIndexInPlace(dotProduct());
    	as.shiftPartitionsHorizontally(minusOne());
    	bs.shiftPartitionsVertically(minusOne());
	}

	as.shiftPartitionsHorizontally(identity());
	bs.shiftPartitionsVertically(identity());
	
	mkt::roi_end();
	
	cs.show();
}
