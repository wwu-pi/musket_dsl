#config PLATFORM GPU CUDA
#config PROCESSES 1
#config CORES 24
#config GPUS 1
#config MODE release

const int mdim = 4;

array<int,16,dist, yes> as = {7};
array<int,16,dist, yes> bs;
array<int,16,dist, yes> cs = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};

array<int,16,copy, yes> asc = {7};
array<int,16,copy, yes> bsc;
array<int,16,copy, yes> csc = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};

// matrix<int,mdim,mdim,dist> asma = {7};
// matrix<int,mdim,mdim,dist> bsma;

// matrix<int,mdim,mdim,copy> ascm = {7};
// matrix<int,mdim,mdim,copy> bscm;


int initMatrix(int x, int r, int c, int v){
	return r * mdim + c + x;
}

int sum(int a, int b){
	return a + b;
}

int timesX(int x, int e){
	return x * e ;
}

main{
	mkt::roi_start();
	
	// Array
	
	int a = 0;
	int b = 0;
	int c = 0;
	int ac = 0;
	int bc = 0;
	int cc = 0;
		
	a = as.reduce(plus);
	b = bs.reduce(plus);	
	c = cs.reduce(plus);
	
	ac = asc.reduce(plus);
	bc = bsc.reduce(plus);	
	cc = csc.reduce(plus);
	
	int dd = 0;
	int dc = 0;
	
	//dd = as.mapReduce(timesX(2), 0, sum());
	//dc = asc.mapReduce(timesX(2), 0, sum());
	
	
	//Matrix
	
	//int am = 0;
	//int bm = 0;
	//int acm = 0;
	//int bcm = 0;
		
	
		
	//bsma.mapIndexInPlace(initMatrix(1));
	//bscm.mapIndexInPlace(initMatrix(1));
		
	//asma.show();
	//ascm.show();
		
	//bsma.show();
	//bscm.show();
		
	//am = asma.reduce(plus);
	//bm = bsma.reduce(plus);	
	
	//acm = ascm.reduce(plus);
	//bcm = bscm.reduce(plus);	
	
	//int ddm = 0;
	//int dcm = 0;
	
	//ddm = asma.mapReduce(timesX(2), 0, sum());
	//dcm = ascm.mapReduce(timesX(2), 0, sum());
	
	mkt::roi_end();
	
	mkt::print("a = %i; b = %i; c = %i\n", a,b,c);
	mkt::print("ac = %i; bc = %i; cc = %i\n", ac,bc,cc);
	mkt::print("dc = %i; dd = %i\n\n", dc,dd);
	
	//mkt::print("am = %i; bm = %i\n", am,bm);
	//mkt::print("acm = %i; bcm = %i\n", acm,bcm);
	//mkt::print("dcm = %i; ddm = %i\n", dcm,ddm);
}
