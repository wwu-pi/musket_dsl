#config PLATFORM CPU CPU_MPMD
#config PROCESSES 4
#config CORES 8
#config MODE debug

const double PI = 3.141592653589793;
const double EULER = 2.718281828459045;

const double UPPER_BOUND = 5.12;
const double LOWER_BOUND = -5.12;
const double PROBLEM_RANGE = 10.24;
const double INIT_UPPER_BOUND = 5.12;
const double INIT_LOWER_BOUND = -5.12;
const double WEIGHT_UPPER_BOUND = 5000.0;
const double WEIGHT_LOWER_BOUND = 1.0;
const double STEP_SIZE_INITIAL = 0.1;
const double STEP_SIZE_FINAL = 0.00001;
const double STEP_SIZE_VOLITIVE_INITIAL = 0.2;
const double STEP_SIZE_VOLITIVE_FINAL = 0.00002;

const int NUMBER_OF_FISH = 32;
const int ITERATIONS = 100;
const int DIMENSIONS = 512;

// Fish
struct Fish{
	array<double,DIMENSIONS,loc> position;
	double fitness;
	
	array<double,DIMENSIONS,loc> candidate_position;
	double candidate_fitness;
	
	array<double,DIMENSIONS,loc> displacement;	
	double fitness_variation;
	
	double weight;
	
	array<double,DIMENSIONS,loc> best_position;
	double best_fitness;
};


array<Fish,NUMBER_OF_FISH,dist> weighted_fishes;
array<double,DIMENSIONS,copy> barycenter_copy;



array<double,DIMENSIONS,loc> calcBarycenterFold(array<double,DIMENSIONS,loc> arr, array<double,DIMENSIONS,loc> position){
	for(int i = 0; i < DIMENSIONS; ++i){
		arr[i] += position[i];
	}
	return arr;
}



main{
	
		barycenter_copy = weighted_fishes.mapFold((Fish fi) -> array<double, DIMENSIONS, loc> { return fi.position;}, array<double, DIMENSIONS, loc>{0.0}, calcBarycenterFold());
}
